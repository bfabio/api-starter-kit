#
# Questo e' un progetto d'esempio in formato OpenAPI 3.0 API Starter Kit.
#
# Stai per sviluppare un API? Segui attentamente questo template e
#   potrai integrarla facilmente in Developers Italia.
#
openapi: 3.0.0
info:
  version: "1.0.0"
  # Il `title` e' il nome del tuo prodotto/servizio!
  # E' la prima cosa ad apparire in pagine web e cataloghi.
  # Dev'essere chiaro e conciso.
  title: |-
    Starter Kit API
  description: |
    Questa prima linea verrà usata come sottotitolo. Descrive brevemente e in linguaggio comune il servizio.
    \
    \
    #### Documentazione
    Qui devi inserire la documentazione principale del servizio. Usa due "\" per separare il sottotitolo dalla documentazione.
    Il testo dev'essere diviso in piu' parti, tutte scritte in Markdown.

    Questa sezione e' informativa:

      * cosa fanno queste API?
      * chi puo' beneficiarne?
      * perche' sono utili?

    ##### Sottosezioni
    E' possibile utilizzare - con criterio - delle sottosezioni.

    #### Note

    Usa questa sezione per annotazioni specifiche, riferimenti normativi e/o
    per manleve ed esclusioni di responsabilita' eventualmente non incluse in `termsOfService`.

    #### Informazioni tecniche ed esempi

    Qui e' possibile introdurre brevi informazioni tecniche ed esempi.
    Attenzione: la `description` non sostituisce la documentazione di progetto,
    deve pero' facilitare l'esecuzione delle prime richieste.

  # I termini del servizio contengono un riferimento
  #   a tutte le indicazioni e le note legali per l'utilizzo
  #   del servizio, inclusi gli eventuali riferimenti utili al GDPR.
  termsOfService: 'http://swagger.io/terms/'
  # Chi posso contattare per informazioni sul servizio e sul suo stato?
  contact:
    email: robipolli@gmail.com
    name: Roberto Polli
    url: https://twitter.com/ioggstream
  # L'audience delle API. Attualmente e' definito solamente
  #   la tipologia `public`.
  x-audience:
    - public
  # Ogni API deve avere un UUID, invariante nel tempo e
  #   rispetto al `title`.
  x-api-id: 71afb493-b5a1-44ed-a997-991c217f520c
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
# Una lista di `tag` utili a raggruppare le varie operazioni
#   eseguite dalle API. Ogni `tag` puo' referenziare un link
#   alla sua descrizione.
tags:
  - name: public
    description: Retrieve informations
    externalDocs:
      url: http://docs.my-api.com/pet-operations.htm
# Uno o piu' server di erogazione.
#   Puo' essere utile indicare gli indirizzi di collaudo,
#   sviluppo e test.
servers:
  - description: Test server
    url: https://api.example.com/ipa/v1
  - description: Development server
    url: https://localhost:8443/ipa/v1

# Se usi componenti in modo ricorrente, yaml
#   permette di definirle e riusarle.
#   Puoi metterle nell'oggetto x-commons e rimuoverlo
#   prima di pubblicarle.
x-commons:
  headers: &x_ratelimit_headers
    X-RateLimit-Limit:
      $ref: '#/components/headers/X-RateLimit-Limit'
    X-RateLimit-Remaining:
      $ref: '#/components/headers/X-RateLimit-Remaining'
    X-RateLimit-Reset:
      $ref: '#/components/headers/X-RateLimit-Reset'

  # OpenAPI permette di riusare una serie di oggetti predefiniti, scaricabili
  #  anche online. Questi oggetti verranno riutilizzati in tutte le API.
  responses: &common_responses
    '400':
      $ref: '#/components/responses/400BadRequest'
    '401':
      description: Credenziali LDAP non valide.
    '404':
      $ref: '#/components/responses/404NotFound'
    '429':
      $ref: '#/components/responses/429TooManyRequests'
    '503':
      $ref: '#/components/responses/503ServiceUnavailable'
    default:
      $ref: '#/components/responses/default'

  json_responses: &common_json_responses
    <<: *common_responses
    '406':
      description: >-
        Assenza dell'header di richiesta `Accept: application/json`
#
# Qui vanno tutti i path.
#
paths:
  /indicepa/{ipa_code}:
    get:
      summary: Recupera le informazioni su una PA.
      description: |
        Si connette ad IndicePA e recupera le informazioni su
        un'amministrazione tramite il codice IPA.
      operationId: get_ipa
      tags:
        - public
      security:
        - ldapCredentials: []
      parameters:
        - $ref: "#/components/parameters/ipa_code"
      responses:
        <<: *common_responses
        '200':
          description: |
            La PA e' stata trovata e le informazioni sono state recuperate
            con successo.
          # Questi headder di throttling sono obbligatori e definiti
          #   nel Nuovo modello di interoperabilità.
          headers:
            <<: *x_ratelimit_headers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PA'
  /indicepa:
    get:
      summary: Ricerca una PA per nome.
      description: |
        Si connette ad IndicePA e ricerca una PA per nome.
      operationId: search_ipa
      tags:
        - public
      security:
        - ldapCredentials: []
      parameters:
        - $ref: "#/components/parameters/name"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/sort"
      responses:
        <<: *common_responses
        '200':
          description: |
            La PA e' stata trovata e le informazioni sono state recuperate
            con successo.
          headers:
            <<: *x_ratelimit_headers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PA'

components:
  securitySchemes:
    ldapCredentials:
      type: http
      scheme: basic
  parameters:
    limit:
      $ref: 'https://teamdigitale.github.io/openapi/parameters/v3.yaml#/limit'
    offset:
      $ref: 'https://teamdigitale.github.io/openapi/parameters/v3.yaml#/offset'
    sort:
      $ref: 'https://teamdigitale.github.io/openapi/parameters/v3.yaml#/sort'
    ipa_code:
      name: ipa_code
      in: path
      description: Il codice IPA dell'amministrazione.
      required: true
      example: asl_lt
      schema:
        type: string
    name:
      name: name
      in: query
      description: La stringa da ricercare nel nome dell'amministrazione.
      required: true
      example: Latina
      schema:
        type: string

  headers:
    X-RateLimit-Limit:
      $ref: 'https://teamdigitale.github.io/openapi/headers/v3.yaml#/X-RateLimit-Limit'
    X-RateLimit-Remaining:
      $ref: 'https://teamdigitale.github.io/openapi/headers/v3.yaml#/X-RateLimit-Remaining'
    X-RateLimit-Reset:
      $ref: 'https://teamdigitale.github.io/openapi/headers/v3.yaml#/X-RateLimit-Reset'
    Retry-After:
      $ref: 'https://teamdigitale.github.io/openapi/headers/v3.yaml#/Retry-After'

  responses:
    # Predefined error codes for this API
    400BadRequest:
      $ref: 'https://teamdigitale.github.io/openapi/responses/v3.yaml#/400BadRequest'
    404NotFound:
      $ref: 'https://teamdigitale.github.io/openapi/responses/v3.yaml#/404NotFound'
    429TooManyRequests:
      $ref: 'https://teamdigitale.github.io/openapi/responses/v3.yaml#/429TooManyRequests'
    503ServiceUnavailable:
      $ref: 'https://teamdigitale.github.io/openapi/responses/v3.yaml#/503ServiceUnavailable'
    default:
      $ref: 'https://teamdigitale.github.io/openapi/responses/v3.yaml#/default'

  schemas:
    Problem:
      $ref: 'https://teamdigitale.github.io/openapi/schemas/problem.yaml#/Problem'
    PA:
      type: object
      description: Una Pubblica Amministrazione.
